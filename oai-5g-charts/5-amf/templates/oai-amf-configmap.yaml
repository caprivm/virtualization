---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: oai-5gcn
  name: oai-amf-configmap-variables
data:
  tz: "Europe/Paris"
  instance: "0"
  pidDirectory: "/var/run"
  operatorKey: "C42449363BBAD02B66D16BC975D77CC1"
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: oai-5gcn
  name: oai-amf-configmap
data:
  amf.conf: |
    AMF =
    {
      INSTANCE_ID = 0 ;            # 0 is the default
      PID_DIRECTORY = "/var/run";   # /var/run is the default

      AMF_NAME = "oai-amf";
      
      RELATIVE_CAPACITY = 30;
      # Display statistics about whole system (in seconds)
      STATISTICS_TIMER_INTERVAL = 20; # YOUR CONFIG HERE
      CORE_CONFIGURATION:
      {
        EMERGENCY_SUPPORT = "false";
      };
      GUAMI:
      {
        MCC = "001"; MNC = "01"; RegionID = "128"; AMFSetID = "1"; AMFPointer = "1"
      }

      SERVED_GUAMI_LIST = (
        {MCC = "001"; MNC = "01"; RegionID = "128"; AMFSetID = "1"; AMFPointer = "0"}
      );

      PLMN_SUPPORT_LIST = (
      {
        MCC = "001"; MNC = "01"; TAC = 0x0001;
        SLICE_SUPPORT_LIST = (
          {SST = 1; SD = "0x1"}
         )
      }
      );
      
      INTERFACES:
      {
        # AMF binded interface for N1/N2 interface (NGAP)
        NGAP_AMF:
        {
          INTERFACE_NAME = "eth0";
          IPV4_ADDRESS   = "read";
          PORT           = 38412;
          PPID           = 60;
        };

        # AMF binded interface for SBI (N11 (SMF)/N12 (AUSF), etc.)
        SBI:
        {
          INTERFACE_NAME = "eth0";
          IPV4_ADDRESS   = "read";
          PORT           = 80;
          API_VERSION    = "v1";
          HTTP2_PORT     = 8080;

          SMF_INSTANCES_POOL = (
            {SMF_INSTANCE_ID = 1; IPV4_ADDRESS = "10.233.95.120"; PORT = "80"; HTTP2_PORT = 8080, VERSION = "v1"; FQDN = "oai-smf-svc", SELECTED = "true"} # YOUR SMF CONFIG HERE
          );
        };

        NRF :
        {
          IPV4_ADDRESS = "10.233.19.104";
          PORT         = 80;            # Default: 80
          API_VERSION  = "v1";
          FQDN         = "oai-nrf-svc"
        };

        AUSF :
        {
          IPV4_ADDRESS = "10.233.28.39";
          PORT         = 80;            # Default: 80
          API_VERSION  = "v1";
          FQDN         = "oai-ausf-svc"
        };

        UDM :
        {
          IPV4_ADDRESS = "10.233.58.64";
          PORT         = 80;    # Default: 80
          API_VERSION  = "v2";
          FQDN         = "oai-udm-svc"
        };

        NSSF :
        {
          IPV4_ADDRESS = "127.0.0.1";
          PORT         = 80;            # Default: 80
          API_VERSION  = "v2";
          FQDN         = "localhost"
        };
      };

      SUPPORT_FEATURES:
      {
         # STRING, {"yes", "no"},
         NF_REGISTRATION = "yes";  # Set to yes if AMF registers to an NRF
         NRF_SELECTION   = "no";    # Set to yes to enable NRF discovery and selection
         EXTERNAL_NRF    = "no";     # Set to yes if AMF works with an external NRF
         SMF_SELECTION   = "no";    # Set to yes to enable SMF discovery and selection
         EXTERNAL_AUSF   = "yes";    # Set to yes if AMF works with an external AUSF
         EXTERNAL_UDM    = "no";     # Set to yes if AMF works with an external UDM
         EXTERNAL_NSSF   = "no";    # Set to yes if AMF works with an external NSSF
         USE_FQDN_DNS    = "no";   # Set to yes if AMF relies on a DNS to resolve NRF/SMF/UDM/AUSF's FQDN
         USE_HTTP2       = "no";        # Set to yes to enable HTTP2 for AMF server
      }

      AUTHENTICATION:
      {
        ## MySQL mandatory options
        MYSQL_server = "mysql"; # MySQL Server address
        MYSQL_user   = "root";   # Database server login
        MYSQL_pass   = "linux";   # Database server password
        MYSQL_db     = "oai_db";     # Your database name

        ## OP
        RANDOM       = "true";
      };

      NAS:
      {
        ORDERED_SUPPORTED_INTEGRITY_ALGORITHM_LIST = [ "NIA1" , "NIA1" , "NIA2" ] ;
        ORDERED_SUPPORTED_CIPHERING_ALGORITHM_LIST = [ "NEA0" , "NEA1" , "NEA2" ] ;
      };
    };


    MODULES =
    {
      NGAP_MESSAGE = (
        {MSG_NAME = "NGSetupRequest"; ProcedureCode = 21; TypeOfMessage = "initialMessage"}
      );
    };
