x-logging: &default-logging
  driver: loki
  options:
    loki-url: 'http://localhost:3100/api/prom/push'
    loki-pipeline-stages: |
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2}'
          max_wait_time: 3s
      - regex:
          expression: '^(?P<time>\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2},d{3}) (?P<message>(?s:.*))$$'

version: "3.9"
name: fastapi-application
services:
  prometheus:
    image: prom/prometheus:v2.49.1
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./application/config/monitoring/prometheus/prometheus.yml:/workspace/prometheus.yml:ro
    command:
      - --config.file=/workspace/prometheus.yml
      - --enable-feature=exemplar-storage
    networks:
      - fastapi_network
    depends_on:
      - loki
    logging: *default-logging
  loki:
    image: grafana/loki:2.9.3
    container_name: loki
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    networks:
      - fastapi_network
  tempo:
    image: grafana/tempo:2.3.1
    container_name: tempo
    restart: unless-stopped
    command: [ "--target=all", "--storage.trace.backend=local", "--storage.trace.local.path=/var/tempo", "--auth.enabled=false" ]
    ports:
      - "4317:4317"
      - "4318:4318"
    networks:
      - fastapi_network
    depends_on:
      - loki
    logging: *default-logging
  grafana:
    image: grafana/grafana:10.2.3
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./application/config/monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./application/config/monitoring/grafana/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml:ro
      - ./application/config/monitoring/grafana/fastapi-application-observability-dashboard.json:/etc/grafana/dashboards/fastapi-application-observability-dashboard.json:rw
    networks:
      - fastapi_network
    depends_on:
      - loki
    logging: *default-logging
  rabbitmq:
    image: rabbitmq:3.10.7
    container_name: rabbitmq
    restart: unless-stopped
    env_file:
      - ./environment/.env
    expose:
      - "$RABBITMQ_PORT"
    networks:
      - fastapi_network
    volumes:
      - ./application/config/files/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
  postgres:
    image: postgres:13-alpine
    container_name: postgres
    restart: unless-stopped
    env_file:
      - ./environment/.env
    environment:
      - POSTGRES_USER=$POSTGRES_USERNAME
      - POSTGRES_PASSWORD:$POSTGRES_PASSWORD
    expose:
      - "$POSTGRES_PORT"
    ports:
      - "$POSTGRES_PORT:$POSTGRES_PORT"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fastapi_network
  mongo:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    env_file:
      - ./environment/.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME:$MONGODB_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD:$MONGODB_INITDB_ROOT_PASSWORD
    expose:
      - "$MONGODB_PORT"
    ports:
      - "$MONGODB_PORT:$MONGODB_PORT"
    volumes:
      - mongo_data:/data/db
    networks:
      - fastapi_network
  fastapi-application:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: fastapi-application:latest
    init: true
    container_name: fastapi-application
    env_file:
      - ./environment/.env
    hostname: fastapi-application
    expose:
      - "8001"
      - "8002"
    ports:
      - "8001:8001"
      - "8002:8002"
    restart: unless-stopped
    networks:
      - fastapi_network
    depends_on:
      - loki
    logging: *default-logging
volumes:
  postgres_data:
  mongo_data:
  grafana_data:
  prometheus_data:
networks:
  fastapi_network: